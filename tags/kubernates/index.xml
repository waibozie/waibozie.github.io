<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernates on waibozie的罗里吧嗦</title>
    <link>https://waibozie.github.io/tags/kubernates/</link>
    <description>Recent content in Kubernates on waibozie的罗里吧嗦</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Oct 2021 22:16:51 +0800</lastBuildDate><atom:link href="https://waibozie.github.io/tags/kubernates/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Start on Minikube</title>
      <link>https://waibozie.github.io/posts/kubernetes/start-on-minikube/</link>
      <pubDate>Tue, 12 Oct 2021 22:16:51 +0800</pubDate>
      
      <guid>https://waibozie.github.io/posts/kubernetes/start-on-minikube/</guid>
      <description>Minikube  reference: https://minikube.sigs.k8s.io/docs/start/
 安装和启动 # 安装 curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb sudo dpkg -i minikube_latest_amd64.deb # 启动 minikube start 在第一次启动minikube start过程中不小心打断了，再重试怎么都下载不了镜像，似乎是进入了某种异常状态，通过删除用户home目录下的.minikube文件件重试可以重置。
验证 我的minikube安装在一台闲置的linux笔记本上， 需要通过笔记本的ip访问，kubectl proxy默认监听在127.0.0.1回环地址上，所以需要启动一个非回环口上的代理。
kubectl get po -A # 安装dashboard组件 minikube dashboard # 启动访问代理 kubectl proxy --address=&amp;#39;&amp;lt;ip&amp;gt;&amp;#39; --accept-hosts=&amp;#39;^.*&amp;#39; 访问[http://k56cb.waibozie.me:8001/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/]
个人理解 （1）minikube采用了docker in docker的方式部署本地版本的K8s， 运行起来后只能在宿主机上看到一个kicbase容器
waibozie@k56cb:~$ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 9a9c7f55d673 kicbase/stable:v0.0.27 &amp;quot;/usr/local/bin/entr…&amp;quot; 2 days ago Up 2 days 127.0.0.1:49157-&amp;gt;22/tcp, 127.0.0.1:49156-&amp;gt;2376/tcp, 127.0.0.1:49155-&amp;gt;5000/tcp, 127.0.0.1:49154-&amp;gt;8443/tcp, 127.0.0.1:49153-&amp;gt;32443/tcp minikube 在kicbase容器里能看到运行的kubelet进程</description>
    </item>
    
  </channel>
</rss>
